plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.google.cloud.tools.jib' version '3.4.2'
}

group = 'org.causwengteam13'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

jar {
	enabled = false
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

compileJava {
	options.compilerArgs << '-parameters'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'javax.xml.bind:jaxb-api:2.3.1'
	implementation 'org.glassfish.jaxb:jaxb-runtime:2.3.1'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1'

	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'jakarta.validation:jakarta.validation-api:3.1.0-M2'
	implementation 'org.apache.commons:commons-lang3:3.14.0'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.5.0'

	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	// Database
	implementation 'com.h2database:h2'
	implementation 'mysql:mysql-connector-java:8.0.33'

	// QueryDSL
	implementation 'com.querydsl:querydsl-apt:5.1.0:jakarta'
	implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
	implementation 'com.querydsl:querydsl-core:5.1.0'
	annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
}

jib {
	from {
		image = "openjdk:17-jdk-alpine"
	}
	to {
		image = "806246625807.dkr.ecr.ap-northeast-2.amazonaws.com/issue-tracker-server"
		credHelper = "ecr-login"
	}
	container {
		jvmFlags = [
				"-Dspring.datasource.url=${System.getProperty('SPRING_DATASOURCE_URL')}",
				"-Dspring.datasource.username=${System.getProperty('SPRING_DATASOURCE_USERNAME')}",
				"-Dspring.datasource.password=${System.getProperty('SPRING_DATASOURCE_PASSWORD')}"
		]
		ports = ["8080"]
	}
}

tasks.named('test') {
	useJUnitPlatform()
}